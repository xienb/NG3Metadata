<html>
<head>
<meta http-equiv="content-type" content="text/html; charset=GB2312">
<link rel="stylesheet" href="res/temp1.css" type="text/css">
<script type='text/javascript' src='binary/dynaload.js?80'></script>
<script language="JavaScript">
 function OnReady(id)
 {
  AF.func("Build", "treelist/t1.xml");
 }
 function Retrieve()
 {
  var url = document.getElementById("source").value;
  AF.func("Load", url);
 }
</script>
</head>

<body topmargin=4 vlink=#0000ff link=#0000ff>
<center>

<table cols=4 border=0 width=100%>
<col valign=top width=90>
<col valign=top>
<col valign=top>
<col width=300>
<tr>
<td align=center><img src='res/how.bmp'></td>
<td><b>1</b>.点击"取数"；<br><b>2</b>.点击标题执行排序；<br><b>3</b>.拖动标题交换列次序；</td>
<td><b>4</b>.拖动标题至其它标题下方，使其以多层表头展现；<br><b>5</b>.在未排序的列标题处击右键，将其加入多重排序；<br><b>6</b>.将其它列拖入多重排序区，观察表格变化；</td>
<td><b>7</b>.拖动排序区内的列(更换排序优先级)；<br><b>8</b>.拖出排序区内的列(移除排序列)；</td>
</tr>
<tr height=5><td colspan=4></td></tr>
<tr height=26><td colspan=4 align=center>填入的数据(相对URL): <input id='source' type=edit size=22 value="treelistdata/data.txt"> <input type=button value=" 取数 " onClick="Retrieve()"></td></tr>
</table>

<div style="position:relative;width:97%;height:390px">
	<script>insertTreeList('AF', '')</script>
</div>



<!--  以下为技术分析区 -->
<br><br><br>
<table border=0 cols=1 border=0 width=97% style="line-height:21px">
<tr><td><img src='res/tech.jpg'></td></tr><tr><td>
<b>1</b>.上面的Treelist是根据一个<a href="treelist/t1.xml" target=_blank>XML描述文件</a>创建的，它非常之简洁，对吗？ 在后面的演示中也基本类似.<br>
<b>2</b>.Treelist填充的数据支持XML、JSON、TSV(Tab-Seperated Value)格式, 本例用的就是TSV格式的<a href="treelistdata/data.txt" target=_blank>文本数据</a>；<br>
<b>3</b>.选中鼠标右键弹出菜单“显示标尺”，定位到最末行，您可看到共有<font color=red>500行</font>数据，相信您对此性能肯定满意；<br>
<b>4</b>.源码分析：页面中创建Treelist控件实例的HTML如下，直接调用了 <a href='doc/dev/act.htm?80#Tag209' target=_blank>dynaload.js</a> 中的insertTreeList( )函数：<br>
<pre class='xml'>
&lt;div style="position:relative;width:97%;height:400px"&gt;
 &lt;script&gt;insertTreeList('AF', '')&lt;/script&gt;  //对象名为AF
&lt;/div&gt;</pre>
页面中和Treelist有关的js源码是:<br>
<pre class='cpp'>
function OnReady(id)  //Treelist抛给页面的事件
{
 //加装相对当前目录下的XML描述文档，创建Treelist
 AF.func("Build", "treelist/t1.xml");
}
function Retrieve() //“取数”按钮执行的js
{
 var url = document.getElementById("source").value;
 //调用Load函数填充数据
 AF.func("Load", url);
}</pre>
</td></tr></table>
<table border=0 cols=2 border=0 width=97%>
<tr valign=top><td align=right><img src='res/boy.gif'></td><td align=left>使用够简单吧！</td></tr>
</table>

<br>
</center>
</body>
<script type='text/javascript' src='res/nstd.js'></script>
</html>