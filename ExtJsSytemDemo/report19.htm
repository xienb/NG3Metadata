<html>
<head>
<meta http-equiv="content-type" content="text/html; charset=GB2312">
<link rel="stylesheet" href="res/temp1.css" type="text/css">
<script type='text/javascript' src='binary/dynaload.js?80'></script>
<script language="JavaScript">
function OnReady(id)
{
 AF.func("SetSource", "reportdata/datacenter.xml");
 AF.func("Build", "report/center1.xml");
 AF.func("CallFunc", "301\r\n3");
}
</script>
</head>

<body topmargin=4>
<center>

<table cols=2 border=0 width=100%>
<col valign=top width=90>
<col>
<tr>
<td align=center><img src='res/how.bmp'></td>
<td><b>1</b>.请点击工具条中的“重新计算”( <img src='res/calc.bmp'> )按钮，以加载来自中心数据源的数据；<br><b>2</b>.要了解“货运数据”的来源，请点击工具条中的“数据源”( <img src='res/ds.bmp'> )按钮，打开对话框；</td>
</tr></table>

<div style="position:relative;width:98%;height:420px">
	<script>insertReport('AF', '')</script>
</div>


<!--  以下为技术分析区 -->
<br><br><br>
<table border=0 cols=1 border=0 width=97% style='line-height:21px'>
<tr><td><img src='res/tech.jpg'></td></tr><tr><td>
<b>1</b>.打开“数据源”对话框，最终可看到中心数据源目录：<br>
<center><img src='res/illu3.jpg'><br></center>
这个中心数据源URL是哪里来的呢？请看页面源码：<br>
<pre class='cpp'>
function OnReady(id)
{
 AF.func("SetSource", "reportdata/datacenter.xml");    //指定中心数据源URL！！
 AF.func("Build", "report/center1.xml");
}</pre>
第3行是关键，可见只要指定一个URL，最终用户就可以方便地使用所有的数据了。<br><br>
<b>2</b>.今后该 XML 是由程序员来维护的，凡是最终客户可能要用到的数据, 都应该在XML编目中登记；<br><br>
<b>3</b>.在本Demo中，中心数据源编目是一个静态的XML文件，在实际应用中，出于安全等因素，建议采用类似 Servlet 或 aspx，只要数据格式是 XML 就行，具体的 XML 规范请参见开发文档；<br><br>
<b>4</b>.实际的中心数据源编目可能会日益丰富、内容逐步膨胀，而单张报表通常只会用到其中的若干项，为此，当需要使用某个数据源项时都需要通过 <img src='res/ds.bmp'> 显式选择, 并为该项定义一个ID，如图中的“ds1”；<br><br>
<b>5</b>.一旦定义了ID，就可以在报表的公式中使用这个数据源项了，例如本表中B3单元格的公式是 "=headrow('ds1')"、 B4单元格的公式是
<br> "=datarow('ds1')".
</td></tr></table>

<br>
</center>
</body>
<script type='text/javascript' src='res/nstd.js'></script>
</html>