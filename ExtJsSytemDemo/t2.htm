<html>
<head>
<meta http-equiv="content-type" content="text/html; charset=GB2312">
<link rel="stylesheet" href="res/temp1.css" type="text/css">
<script type='text/javascript' src='binary/dynaload.js?80'></script>
<script language="JavaScript">
 function OnReady(id)
 {
  AF.func("Build", "treelist/t1.xml\r\nisTree=true");
  AF.func("Load", "treelistdata/data.txt");
 }
</script>
</head>

<body topmargin=4 vlink=#0000ff link=#0000ff>
<center>

<table cols=4 border=0 width=100%>
<col valign=top width=120>
<col valign=top>
<col valign=top>
<col valign=top>
<tr>
<td align=center><img src='res/how.bmp'></td>
<td><b>1</b>.点击标题执行排序，观察第一列的变化；<br><b>2</b>.在列标题处击右键，将其它列加入多重排序；<br><b>3</b>.单击排序区中的列，观察树的变化；<br></td>
<td><b>4</b>.切换成列表，再切换回树；<br><b>5</b>.右键选择"全部展开"；<br><b>6</b>右键选择"打印\打印预览"，查看打印效果；<br></td>
<td><b>7</b>.拖出左侧的垂直分隔条(冻结)，<br>注意右键菜单"打印\打印预览"菜<br>单处的横向分页浮动提示；</td>
</tr>
<tr height=8><td colspan=4></td></tr>
</table>

<div style="position:relative;width:97%;height:400px">
	<script>insertTreeList('AF', '')</script>
</div>



<!--  以下为技术分析区 -->
<br><br><br>
<table border=0 cols=1 border=0 width=97% style='line-height:21px'>
<tr><td><img src='res/tech.jpg'></td></tr><tr><td>
<b>1</b>.本例创建Treelist的<a href="treelist/t1.xml" target=_blank>XML描述文件</a>、填入的数据和上一个演示页("感受Treelist")<b>完全相同</b>；<br>
<b>2</b>.源码分析：本页面中和Treelist有关的js源码是:<br>
<pre class='cpp'>
function OnReady(id)  //Treelist抛出的事件
{
 //因为t1.xml是列表，所以通过 isTree=true 强制其以树展现
 AF.func("Build", "treelist/t1.xml<font color=red>\r\nisTree=true</font>");
 AF.func("Load", "treelistdata/data.txt");
}</pre>
　　和上个演示页比较，主要有二处差别：<br>
　　1.源码第4行增加了isTree属性，强制Treelist以Tree方式显示；<br>
　　2.创建Treelist和加载数据合并在一个函数中；<br>
<br>
<b>3</b>.功能提示：拖出左侧的垂直分隔条后，在打印时如果需要横向分页，那么左侧的冻结列也将自动被当作固定列处理，右键菜单的浮动提示如下:<br>
<img src='res/illu19.jpg'>
</td></tr></table>
<table border=0 cols=2 border=0 width=97%>
<tr valign=top><td align=right><img src='res/boy.gif'></td><td align=left>使用够简单吧！</td></tr>
</table>

<br>
</center>
</body>
<script type='text/javascript' src='res/nstd.js'></script>
</html>